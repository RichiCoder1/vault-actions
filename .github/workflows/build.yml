on:
  push:
    branches:
      - main
  pull_request_target:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '16.14.0'

    - name: Setup NPM Cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: NPM Install
      run: npm ci

    - name: NPM Build
      run: npm run build

    - name: NPM Run Test
      run: npm run test

  integrationOSS:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Run docker-compose
      run: docker-compose up -d vault

    - uses: actions/setup-node@v3
      with:
        node-version: '16.14.0'

    - name: Setup NPM Cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: NPM Install
      run: npm ci

    - name: NPM Build
      run: npm run build

    - name: NPM Run test;integration:basic
      run: npm run test:integration:basic
      env:
        VAULT_HOST: localhost
        VAULT_PORT: 8200
        CI: true

  integrationEnterprise:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Run docker-compose
      run: docker-compose up -d vault-enterprise
      env:
        VAULT_LICENSE_CI: ${{ secrets.VAULT_LICENSE_CI }}

    - uses: actions/setup-node@v3
      with:
        node-version: '16.14.0'

    - name: Setup NPM Cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: NPM Install
      run: npm ci

    - name: NPM Build
      run: npm run build

    - name: NPM Run test:integration:enterprise
      run: npm run test:integration:enterprise
      env:
        VAULT_HOST: localhost
        VAULT_PORT: 8200
        CI: true

  e2e:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Run docker-compose
      run: docker-compose up -d vault

    - uses: actions/setup-node@v3
      with:
        node-version: '16.14.0'

    - name: Setup NPM Cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: NPM Install
      run: npm ci

    - name: NPM Build
      run: npm run build

    - name: Setup Vault
      run: node ./integrationTests/e2e/setup.js
      env:
        VAULT_HOST: localhost
        VAULT_PORT: 8200

    - name: Test Vault Action (default KV V2)
      uses: ./
      id: kv-secrets
      with:
        url: http://localhost:8200
        token: testtoken
        secrets: |
          secret/data/test secret ;
          secret/data/test secret | NAMED_SECRET ;
          secret/data/nested/test otherSecret ;

    - name: Test Vault Action (default KV V1)
      uses: ./
      with:
        url: http://localhost:8200
        token: testtoken
        secrets: |
          my-secret/test altSecret ;
          my-secret/test altSecret | NAMED_ALTSECRET ;
          my-secret/nested/test otherAltSecret ;

    - name: Test Vault Action (cubbyhole)
      uses: ./
      with:
        url: http://localhost:8200
        token: testtoken
        secrets: |
          /cubbyhole/test foo ;
          /cubbyhole/test zip | NAMED_CUBBYSECRET ;

    - name: Verify Vault Action Outputs
      run: npm run test:e2e
      env:
        OTHER_SECRET_OUTPUT: ${{ steps.kv-secrets.outputs.otherSecret }}

# Removing publish step for now.
#  publish:
#    if: github.event_name	== 'push' && contains(github.ref, 'main')
#    runs-on: ubuntu-latest
#    needs: [build, integration, e2e]
#    steps:
#    - uses: actions/checkout@v1
#    - uses: actions/setup-node@v3
#      with:
#        node-version: '16.14.0'
#    - name: setup npm cache
#      uses: actions/cache@v1
#      with:
#        path: ~/.npm
#        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#        restore-keys: |
#          ${{ runner.os }}-node-
#    - name: npm install
#      run: npm ci
#    - name: release
#      if: success() && endsWith(github.ref, 'main')
#      run: npx semantic-release
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
